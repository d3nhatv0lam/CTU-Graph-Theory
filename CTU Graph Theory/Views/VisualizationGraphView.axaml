<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="1000" d:DesignHeight="600"
			 xmlns:vm="using:CTU_Graph_Theory.ViewModels"
			 xmlns:model="using:CTU_Graph_Theory.Models"
			 xmlns:converter ="using:CTU_Graph_Theory.Converters"
			 xmlns:interface ="using:CTU_Graph_Theory.Interfaces"
			 x:DataType="vm:VisualizationGraphViewModel"
			 xmlns:paz="using:Avalonia.Controls.PanAndZoom"
			 xmlns:controls="clr-namespace:Material.Styles.Controls;assembly=Material.Styles"
			 xmlns:p1="clr-namespace:Material.Styles.Assists;assembly=Material.Styles"
			 xmlns:System="clr-namespace:System;assembly=mscorlib"
			 xmlns:AvaloniaEdit="clr-namespace:AvaloniaEdit;assembly=AvaloniaEdit"
			xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:behaviors="using:CTU_Graph_Theory.Behaviors"
			 
			 xmlns:agc="clr-namespace:AvaloniaGraphControl;assembly=AvaloniaGraphControl"
			 x:Class="CTU_Graph_Theory.Views.VisualizationGraphView">

	<UserControl.DataContext>
		<vm:VisualizationGraphViewModel/>
	</UserControl.DataContext>

	<UserControl.Resources>
		<converter:GraphTypeToStringConverter x:Key ="TypeToString"/>
		<converter:GraphDirectTypeToStringConverter x:Key ="DirectToString"/>
		<converter:EmptyVertexToStringConverter x:Key ="SelectAllConvert"/>
	</UserControl.Resources>

	<Grid ColumnDefinitions="0.25* auto *">
		<Border Grid.Column="0" CornerRadius="10" Padding="10" Background="Transparent">
			<DockPanel>
				<TextBlock Classes="Headline6" DockPanel.Dock="Top" Text="Nhập đồ thị:"/>
				<!--<TextBox DockPanel.Dock="Top"
						 UseFloatingWatermark="False"
						 Classes="outline"
						 Theme="{StaticResource OutlineTextBox}"
						 IsReadOnly="True"
						 Text="{Binding VertexCount}"
						 Watermark="số lượng đỉnh" />-->

				<Separator DockPanel.Dock="Top" />

				<Grid DockPanel.Dock="Top" RowDefinitions="auto *" ColumnDefinitions="* *">

					<Label Content="Loại đồ thị"/>
					<Grid.Styles>
						<Style Selector="RadioButton">

							<Style Selector="^:pointerover">
								<Setter Property="Background" Value="LightGray"/>
							</Style>

							<Style Selector="^:checked">
								<Setter Property="Background" Value="LightBlue"/>
							</Style>

							<Setter Property="MinHeight" Value="40"/>
							<Setter Property="FontSize" Value="14"/>
							<Setter Property="FontWeight" Value="Bold"/>
							<Setter Property="BorderBrush" Value="Black"/>
							<Setter Property="BorderThickness" Value="1"/>
							<Setter Property="HorizontalContentAlignment" Value="Center"/>
							<Setter Property="VerticalContentAlignment" Value="Center"/>
							<Setter Property="CornerRadius" Value="5"/>
							<Setter Property="Template">
								<ControlTemplate>
									<Border
										  Height="{TemplateBinding Height}"
										  CornerRadius="{TemplateBinding CornerRadius}"
										  Width="{TemplateBinding Width}"
										  BorderThickness="{TemplateBinding BorderThickness}"
										  Background="{TemplateBinding Background}"
										  BorderBrush="{TemplateBinding BorderBrush}">
										<ContentPresenter
										  Name="PART_ContentPresenter"
										  Margin="{TemplateBinding Padding}"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  Content="{TemplateBinding Content}"
										  ContentTemplate="{TemplateBinding ContentTemplate}"
										  RecognizesAccessKey="True" />
									</Border>
								</ControlTemplate>
							</Setter>
						</Style>
					</Grid.Styles>

					<RadioButton x:Name="UnDirectGraphSelect" IsEnabled="{Binding !IsRunningAlgorithm}"
								 Grid.Row="1"
								 Grid.Column="0"
								 Content="Vô hướng"
								 IsChecked="true"
								 Command="{Binding ChangeGraphTypeCommand}"
								 CommandParameter="{Binding $self}"
								 Tag="UnDirected"/>
					<RadioButton x:Name="DirectGraphSelect" Grid.Row="1" IsEnabled="{Binding !IsRunningAlgorithm}"
								 Grid.Column="1"
								 Content="Có hướng"
								 Command="{Binding ChangeGraphTypeCommand}"
								 CommandParameter="{Binding $self}"
								 Tag="Directed"/>
				</Grid>

				<Separator DockPanel.Dock="Top"/>

				<TextBlock DockPanel.Dock="Top" Text="Danh Sách Cung"/>
				<AvaloniaEdit:TextEditor
										Padding="0 10 0 0"
										IsReadOnly="{Binding IsRunningAlgorithm}"
										ShowLineNumbers="True">
					<i:Interaction.Behaviors>
						<behaviors:DocumentTextBindingBehavior Text="{Binding GraphData, Mode=TwoWay}"/>
					</i:Interaction.Behaviors>
				</AvaloniaEdit:TextEditor>
			</DockPanel>
		</Border>

		<Border Grid.Column="1" Width="1" Padding="0 10 0 10">
			<Panel Background="Gray"/>
		</Border>

		<Grid Grid.Column="2" RowDefinitions="* 0.2*" ColumnDefinitions="* 0.8*">

			<Border Grid.Row="0" Grid.Column="0" Padding="10">
				<Grid RowDefinitions="* 0.1*">
					<paz:ZoomBorder Grid.Row="0"
								Stretch="Uniform" ZoomSpeed="1.5"
								 MaxZoomX="2" MaxZoomY="2"
								 PanButton="Left"  VirtualizingStackPanel.VerticalSnapPointsChanged=""
								 EnableConstrains="true"
								 BorderThickness="1" BorderBrush="Black"
								 Background="Transparent" ClipToBounds="True" Focusable="True"
								 VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
							>
						<agc:GraphPanel x:Name="MainGraph" Graph="{Binding MainGraph}" LayoutMethod="SugiyamaScheme" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">

							<agc:GraphPanel.Transitions>
								<Transitions>
									<TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.1"  Easing="LinearEasing"/>
								</Transitions>
							</agc:GraphPanel.Transitions>

							<agc:GraphPanel.Styles>
								<!--// Node Style Area //-->
								<Style Selector="agc|TextSticker">
									<Setter Property="Background" Value="Transparent"/>
									<Style Selector="^:pointerover">
										<Setter Property="Background" Value="Red"/>
									</Style>
									<Setter Property="Transitions">
										<Transitions>
											<BrushTransition Property="BorderForeground" Duration="0:0:0.2"/>
										</Transitions>
									</Setter>

								</Style>

								<Style Selector="agc|TextSticker.NotShow">
									<Setter Property="Opacity" Value="0"/>

								</Style>

								<Style Selector="agc|TextSticker.Show">
									<Setter Property="Opacity" Value="1"/>
								</Style>

								<Style Selector="agc|TextSticker.NotVisited">
									<Setter Property="BorderForeground" Value="Black"/>

								</Style>

								<Style Selector="agc|TextSticker.Visited">
									<Setter Property="BorderForeground" Value="Red"/>
								</Style>

								<Style Selector="agc|TextSticker.Pending">
									<Setter Property="BorderForeground" Value="#FFCC00"/>
								</Style>

								<Style Selector="agc|TextSticker.PointedTo">
									<Setter Property="BorderForeground" Value="#0000FF"/>
								</Style>

								<!--// Connection //-->
								<Style Selector="agc|Connection">
									<Style Selector="^:pointerover">
										<Setter Property="Brush" Value="Blue"/>
									</Style>
									<Setter Property="Transitions">
										<Transitions>
											<BrushTransition Property="Brush" Duration="0:0:0.2"/>
										</Transitions>
									</Setter>
								</Style>
								<Style Selector="agc|Connection.NotShow">
									<Setter Property="Opacity" Value="0"/>
								</Style>
								<Style Selector="agc|Connection.Show">
									<Setter Property="Opacity" Value="1"/>
								</Style>
								<Style Selector="agc|Connection.NotVisited">
									<Setter Property="Brush" Value="Black"/>
								</Style>
								<Style Selector="agc|Connection.Visited">
									<Setter Property="Brush" Value="Red"/>
								</Style>
								<Style Selector="agc|Connection.PointTo">
									<Setter Property="Brush" Value="#0000FF"/>
								</Style>
							</agc:GraphPanel.Styles>

							<agc:GraphPanel.DataTemplates>
								<!--// node template //-->
								<DataTemplate DataType="{x:Type model:Vertex}">
									<agc:TextSticker Classes.Show="{Binding IsShowVertex}"
													 Classes.NotShow ="{Binding !IsShowVertex}"
													 Classes.NotVisited ="{Binding !IsVisited}"
													 Classes.Visited ="{Binding IsVisited}"
													 Classes.Pending ="{Binding IsPending}"
													 Classes.PointedTo ="{Binding IsPointedTo}"
													 BorderThickness="1"
													 Text="{Binding Title}"
													 Shape="Ellipse"
													 />
								</DataTemplate>
								<!--// Edge template //-->
								<DataTemplate DataType="{x:Type model:ShowableEdge}">
									<agc:Connection Classes.NotShow="{Binding !IsShowEdge}"
													Classes.Show="{Binding IsShowEdge}"
													Classes.Visited="{Binding IsVisited}"
													Classes.NotVisited ="{Binding !IsVisited}"
													Classes.PointTo="{Binding IsPointTo}"
													PropertyChanged="Connection_PropertyChanged"
													/>
								</DataTemplate>
								<!--// weight template //-->
								<DataTemplate DataType="{x:Type System:Int64}">
									<TextBlock Text="{Binding}" Margin="2 0 0 0"/>
								</DataTemplate>
								<!--// Vertex with no Edge template //-->
								<DataTemplate DataType="{x:Type System:String}">
									<TextBlock Height="0" Width="0" ></TextBlock>
								</DataTemplate>
							</agc:GraphPanel.DataTemplates>
						</agc:GraphPanel>
					</paz:ZoomBorder>
					<Grid Grid.Row="1"  ColumnDefinitions="* *">

						<StackPanel Grid.Column="0" Orientation="Horizontal">
							<TextBlock Text="Tốc độ thuật toán: "
									   VerticalAlignment="Center"
										FontWeight="Bold"/>
							<Slider Width="60"
								IsSnapToTickEnabled="True"
								Classes="Discrete Accent"
								Value="{Binding MultiplierSpeed}"
								TickFrequency="1"
								Minimum="1"
								Maximum="5"
								Margin="10 0 0 0"/>
						</StackPanel>
						<Grid Grid.Column="1" ColumnDefinitions="* *">
							<Button Grid.Column="0"
									Theme="{StaticResource MaterialOutlineButton}" Classes="accent"
									Height="40"
									Content="Tạm dừng" HorizontalAlignment="Stretch"
									Command="{Binding PauseAlgorithmCommand}"/>
							<Button Grid.Column="1"
									Theme="{StaticResource MaterialOutlineButton}" Classes="accent"
									Height="40"
									Content="Tiếp tục"
									Command="{Binding ContinueAlgorithmCommand}"/>
						</Grid>
					</Grid>

				</Grid>
			</Border>

			<!--// graph infomation //-->

			<Border Grid.Row="1" Grid.Column="0" Padding="10 0 10 10">
				<Border BorderThickness="1" BorderBrush="Black">
					<Grid RowDefinitions="auto auto auto auto" >
						<Grid.Styles>
							<Style Selector="TextBlock">
								<Setter Property="FontWeight" Value="Bold"/>
							</Style>
						</Grid.Styles>
						<TextBlock  Grid.Row="0"
									Classes="Subtitle1"
								    Text="--Thông tin đồ thị--"
									HorizontalAlignment="Center"/>
						<StackPanel Grid.Row="1"
									Orientation="Horizontal"
									HorizontalAlignment="Left"
									Margin="10 0 0 0">
							<TextBlock Text="Loại đồ thị:"/>
							<TextBlock Text="{Binding GraphType ,Converter={StaticResource TypeToString}}"
									   Margin="5 0 0 0"/>
							<TextBlock Text="{Binding IsDirectedGraph,Converter={StaticResource DirectToString}}"
									   Margin="3 0 0 0"/>
						</StackPanel>
						<Grid Grid.Row="2" Margin="10 0 0 0" ColumnDefinitions="* *">
							<TextBlock  Grid.Column="0" Text="{Binding VertexCount,StringFormat=Số lượng đỉnh: {0}}"/>
							<TextBlock  Grid.Column="1" Text="{Binding EdgeCount,StringFormat=Số lượng cung: {0}}"/>
						</Grid>

						<StackPanel Margin="10 0 0 0" Grid.Row="3" Orientation="Horizontal">
							<StackPanel.Styles>
								<Style Selector="TextBlock.Running">
									<Setter Property="Foreground" Value="Green"/>
									<Setter Property="Text" Value="Đang Duyệt"/>
								</Style>
								<Style Selector="TextBlock.Stopped">
									<Setter Property="Foreground" Value="Brown"/>
									<Setter Property="Text" Value="Không"/>
								</Style>
								<Style Selector="TextBlock.Pause">
									<Setter Property="Text" Value="Tạm dừng"/>
									<Setter Property="Foreground" Value="#FFC107"/>
								</Style>
							</StackPanel.Styles>
							<TextBlock Text="Trạng thái duyệt đồ thị: "/>
							<TextBlock Classes.Running="{Binding IsRunningAlgorithm}"
									   Classes.Stopped ="{Binding !IsRunningAlgorithm}"
									   Classes.Pause ="{Binding IsPauseAlgorithm}"
										/>
						</StackPanel>
					</Grid>
				</Border>
			</Border>

			<!--// Right side //-->
			<Border Grid.Row="0"
				  Grid.RowSpan="2"
				  Grid.Column="1"
				Padding="0 0 10 0">
				<Grid
				  RowDefinitions="0.25* auto auto auto 1.5* auto *"
				  >
					<Grid.Styles>
						<Style Selector="ComboBoxItem">
							<Setter Property="Background" Value="Transparent"/>
							<Style Selector="^:pointerover">
								<Setter Property="Background" Value="LightGray"/>
							</Style>
						</Style>
					</Grid.Styles>

					<TextBlock Grid.Row="0"
							   Classes ="Headline6"
							   Text="Thuật toán"
							   VerticalAlignment="Center"
							   />

					<ComboBox Grid.Row="1"
							  IsEnabled="{Binding !IsRunningAlgorithm}"
							  Theme="{StaticResource MaterialOutlineComboBox}"
							  p1:ComboBoxAssist.Label="Tên thuật toán"
							  ItemsSource="{Binding AlgorithmList}"
							  SelectedItem="{Binding SelectedAlgorithm}"
							  MaxDropDownHeight="200"
							  >
						<ComboBox.ItemTemplate>
							<DataTemplate x:DataType="{x:Type interface:IAlgorithmViewModel}">
								<TextBlock Text="{Binding AlgorithmName}" VerticalAlignment="Center"/>
							</DataTemplate>
						</ComboBox.ItemTemplate>
					</ComboBox>

					<Grid Grid.Row="2"
						  RowDefinitions="* auto auto">

						<Grid 
							  
							  Grid.Row="0"
							  ColumnDefinitions="auto *"
							>
							
							<Grid x:Name="SelectionStartVertexGrid"
								  Classes.NonSelectStartVertex="{Binding IsNonSelectStartVertex}"
								  Grid.Column="0" 
								  ColumnDefinitions="auto *">
								
								<Grid.Styles>
									
									<Style Selector="Grid#SelectionStartVertexGrid">
										<Setter Property="Width" Value="210"/>
										<Setter Property="Transitions">
											<Transitions>
												<DoubleTransition Property="Width" Duration="0:0:0.3" Easing="QuadraticEaseInOut"/>
											</Transitions>
										</Setter>
									</Style>
									<Style Selector="Grid.NonSelectStartVertex">
										<Setter Property="Width" Value="0"/>
										<Style Selector="^ > TextBlock">
											<Setter Property="IsVisible" Value="False"/>
										</Style>
										<Style Selector="^ > ComboBox">
											<Setter Property="IsVisible" Value="False"/>
										</Style>
									</Style>
								</Grid.Styles>
								
								<TextBlock Grid.Column="0"
								   Text="Chọn đỉnh bắt đầu:"
									VerticalAlignment="Center"
									HorizontalAlignment="Center"
									FontWeight="Bold"/>

								<ComboBox Grid.Column="1" Margin="10 0 0 0"
										  IsEnabled="{Binding IsEnableStartVertexSelection}"
										  ItemsSource="{Binding Vertices}"
										  SelectedItem="{Binding StartVertex}"
										 HorizontalAlignment="Center"
										  MaxDropDownHeight="200">

									<ComboBox.ItemTemplate>
										<DataTemplate DataType="{x:Type model:Vertex}">
											<TextBlock Text="{Binding Title,Converter={StaticResource SelectAllConvert}}"
														VerticalAlignment="Center"
														 HorizontalAlignment="Stretch"
														FontWeight="Bold"
														FontSize="18"/>
										</DataTemplate>
									</ComboBox.ItemTemplate>
								</ComboBox>
							</Grid>

							<Border Grid.Column="1" Padding="5 1 5 1">
								<Button Classes="accent" Classes.IsRunningAlgorithm ="{Binding IsRunningAlgorithm}"
									Command="{Binding RunAlgorithmCommand}">
									<Button.Styles>
										<Style Selector="Button">
											<Setter Property="Content" Value="Duyệt"/>
										</Style>
										<Style Selector="Button.IsRunningAlgorithm">
											<Setter Property="Content" Value="Dừng"/>
											<Setter Property="Background" Value="#D31A38"/>
										</Style>
									</Button.Styles>

								</Button>
							</Border>
							
						</Grid>

						<CheckBox Classes="accent" Classes.hide ="{Binding !IsAllowSelectAllVertex}"
								  Grid.Row="1"
								 Content="Duyệt tất cả đỉnh!"
								IsChecked="{Binding IsSelectAllVertex}">
							<CheckBox.Styles>
								<Style Selector="CheckBox">
									<Setter Property="Height" Value="25"/>
									<Setter Property="Transitions">
										<Transitions>
											<DoubleTransition Property="Height" Duration="0:0:0.2" Easing="QuadraticEaseInOut"/>
										</Transitions>
									</Setter>
								</Style>
								<Style Selector="CheckBox.hide">
									<Setter Property="Height" Value="0"/>
								</Style>
							</CheckBox.Styles>
						</CheckBox>

						<ScrollViewer x:Name="scollviewer" Grid.Row="2" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
							<ItemsRepeater ItemsSource="{Binding AlgorithmRequiments}">
								<ItemsRepeater.Styles>
									<Style Selector="TextBlock">
										<Setter Property="Height" Value="20"/>
										<Setter Property="Transitions">
											<Transitions>
												<DoubleTransition Property="Height" Duration="0:0:0.5" Easing="QuadraticEaseInOut"/>
											</Transitions>
										</Setter>
									</Style>

									<Style Selector="TextBlock.DoneRequest">
										<Setter Property="Height" Value="0"/>
									</Style>
								</ItemsRepeater.Styles>
								<ItemsRepeater.ItemTemplate>
									<DataTemplate>
										<TextBlock 
												    Classes.DoneRequest="{Binding IsDoneRequest}"												   Classes ="Subtitle1"
													FontWeight="Bold"
													FontSize="13"
													Foreground="Red"
													Text="{Binding RequestString, StringFormat=+ {0}}"
													TextWrapping="WrapWithOverflow"
													Margin="10 0 0 0"
								/>
									</DataTemplate>
								</ItemsRepeater.ItemTemplate>
							</ItemsRepeater>
						</ScrollViewer>
						

					</Grid>
			
					<Separator Grid.Row="3"/>

					<!--// mã giả //-->
					<Grid Grid.Row="4" RowDefinitions="0.1* *">
						<TextBlock Grid.Row="0" VerticalAlignment="Center"
								   Classes="Headline6" FontWeight="Bold"
								   Text="Mã giả:"/>

						<Border Grid.Row="1" Padding="10">
							<ScrollViewer HorizontalScrollBarVisibility="Disabled" >
								<ItemsRepeater
										ItemsSource="{Binding SelectedAlgorithm.Pseudocodes}"
										VerticalAlignment="Top"
										HorizontalAlignment="Left"
									>
									<ItemsRepeater.Layout>
										<StackLayout Spacing="5"/>
									</ItemsRepeater.Layout>
									<ItemsRepeater.Styles>
										<Style Selector="TextBlock.SelectedLine">
											<Setter Property="Background" Value="LightBlue"/>
										</Style>
									</ItemsRepeater.Styles>

									<ItemsRepeater.ItemTemplate>
										<DataTemplate>
											<TextBlock  Classes.SelectedLine="{Binding IsSelectionCode}"
														FontWeight="SemiBold"
														Text="{Binding CodeWithSlectedVertex}"
														TextWrapping="WrapWithOverflow"
														PropertyChanged="TextBlock_PropertyChanged"
											/>
										</DataTemplate>
									</ItemsRepeater.ItemTemplate>
								</ItemsRepeater>

							</ScrollViewer>

						</Border>

					</Grid>
					<Separator Grid.Row="5"/>
					<!--// Result of Algorithm //-->
					<DockPanel Grid.Row="6">
						<TransitioningContentControl DockPanel.Dock="Top" Content="{Binding SelectedAlgorithm}"/>
					</DockPanel>

				</Grid>
			</Border>

		</Grid>




	</Grid>
</UserControl>
