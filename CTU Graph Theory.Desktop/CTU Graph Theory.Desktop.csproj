<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <!--If you are willing to use Windows/MacOS native APIs you will need to create 3 projects.
    One for Windows with net8.0-windows TFM, one for MacOS with net8.0-macos and one with net8.0 TFM for Linux.-->
    <TargetFramework>net8.0</TargetFramework>
	  <RuntimeIdentifiers>win-x64;win-x86;linux-x64;osx-x64</RuntimeIdentifiers>
	  <SelfContained>true</SelfContained>
    <Nullable>enable</Nullable>
    <BuiltInComInteropSupport>true</BuiltInComInteropSupport>
    <PublishReadyToRun>true</PublishReadyToRun>
    <ApplicationManifest>app.manifest</ApplicationManifest>

    <ErrorReport>prompt</ErrorReport>

    <PlatformTarget>AnyCPU</PlatformTarget>

    <ApplicationIcon>image.ico</ApplicationIcon>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DebugType>none</DebugType>
    <WarningLevel>8</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DebugType>none</DebugType>
    <WarningLevel>8</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Content Include="image.ico" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Avalonia.Angle.Windows.Natives" Version="2.1.22087.20231008" />
    <PackageReference Include="Avalonia.Desktop" Version="11.2.5" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\CTU Graph Theory\CTU Graph Theory.csproj" />
  </ItemGroup>
</Project>
